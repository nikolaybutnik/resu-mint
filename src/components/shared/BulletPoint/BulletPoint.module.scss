@import '../../../styles/variables.scss';
@import '../../../styles/mixins';

.bulletContainer {
  position: relative;
  background: $color-action-item-background;
  padding: 6px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05), 0 1px 2px rgba(0, 0, 0, 0.03);
  border-radius: 4px;
  touch-action: pan-y;

  &:hover {
    background: rgba($color-primary, 0.1);
  }

  &.regenerating {
    opacity: 0.8;
    pointer-events: none;

    &::before {
      content: '';
      position: absolute;
      inset: 0;
      z-index: 3;
      background: linear-gradient(
        110deg,
        rgba(241, 245, 249, 0.8) 8%,
        rgba(147, 197, 253, 0.3) 18%,
        rgba(241, 245, 249, 0.8) 33%
      );
      background-size: 250% 100%;
      animation: shimmer 1.3s linear infinite;
      border-radius: 4px;
    }
  }
}

.toolbar {
  display: flex;
  justify-content: space-between;
  margin-bottom: 8px;
  position: relative;
  z-index: 2;
}

.toolbarLeft {
  position: relative;
}

.toolbarRight {
  display: flex;
  gap: 8px;
}

.deleteButton {
  @include icon-button-small;

  &:hover {
    background: $color-error;
    color: $color-background;
    border-color: $color-error;
  }
}

.editButton {
  @include icon-button-small;

  &:hover {
    background: $color-primary;
    color: $color-background;
    border-color: $color-primary;
  }
}

.saveButton {
  @include icon-button-small;

  &:hover {
    background: $color-transformative;
    color: $color-background;
    border-color: $color-transformative;
  }
}

.regenerateButton {
  @include icon-button-small;

  &:hover {
    background: $color-regenerate;
    color: $color-background;
    border-color: $color-regenerate;
  }
}

.cancelButton {
  @include icon-button-small;

  &:hover {
    background: $color-primary;
    color: $color-background;
    border-color: $color-primary;
  }
}

.lockButton {
  @include icon-button-small;

  &.locked {
    svg {
      color: $color-badge-red;
    }

    &:hover {
      background: $color-badge-green-background;
      border-color: $color-badge-green;

      svg {
        color: $color-disabled;
      }
    }
  }

  &.unlocked:hover {
    background: $color-badge-red-background;
    border-color: $color-badge-red;
  }
}

.deleteButton:disabled,
.editButton:disabled,
.regenerateButton:disabled,
.saveButton:disabled,
.cancelButton:disabled,
.lockButton:disabled {
  background: $color-background;
  color: rgba($color-disabled, 0.5);
  border: 1px solid $color-border;
  opacity: 0.7;
  pointer-events: none;
  transform: none;
}

.contentArea {
  position: relative;
  z-index: 1;
}

.keywordHighlight {
  @include keyword-highlight;
}

.bulletText {
  font-size: 14px;
  line-height: 1.5;
  color: $color-text;
  margin: 0;
  min-height: 80px;
  padding: 8px;
  border-radius: 4px;
  background: $color-background;
  transition: opacity 1s;
  opacity: 1;

  p {
    line-height: 1.75;
    word-break: break-word;
  }

  &.fadingIn p {
    opacity: 0;
    animation: fadeIn 1s forwards;
  }

  &.fadingOut p {
    opacity: 1;
    animation: fadeOut 1s forwards;
  }
}

.bulletInputAreaWrapper {
  display: flex;
  flex-direction: column;
  width: 100%;
  position: relative;
  z-index: 1;
}

.bulletInputArea {
  font-family: $font-family-base;
  font-size: 14px;
  line-height: 1.5;
  padding: 8px;
  border: 1.5px solid $color-primary;
  border-radius: 4px;
  background: $color-background;
  color: $color-text;
  outline: none;
  resize: vertical;
  min-height: 80px;
  box-sizing: border-box;
  touch-action: manipulation;

  &:focus {
    box-shadow: 0 0 0 2px rgba($color-primary, 0.2);
  }

  &:disabled {
    background: $color-background;
    color: $color-disabled;
    border-color: $color-border;
    opacity: 0.7;
    pointer-events: none;
  }
}

.contentFooter {
  margin-top: 8px;
}

.characterCount {
  @include character-count;
}

.characterCountWarning {
  @include character-count;
  @include flash-warning;
}

.characterCountExceeded {
  @include character-count;
  color: $color-error;
  font-weight: 600;
}

.formError {
  @include form-error;
}

.flashWarning {
  @include flash-warning;
}
