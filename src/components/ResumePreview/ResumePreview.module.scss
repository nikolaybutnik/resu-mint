@use 'sass:color';
@import '../../styles/variables';
@import '../../styles/mixins';

.preview {
  display: flex;
  flex-direction: column;
  height: 100%;
  background: $color-background;
  overflow: hidden;
}

.previewHeader {
  padding: 16px 20px;
  border-bottom: 1px solid rgba($color-primary, 0.2);
  background: rgba($color-primary, 0.02);
  display: flex;
  align-items: center;
  justify-content: space-between;

  h2 {
    font-size: 20px;
    font-weight: 600;
    color: $color-text;
    margin: 0;
  }
}

.headerRight {
  display: flex;
  align-items: center;
}

.regeneratingIndicator {
  display: flex;
  align-items: center;
  gap: 8px;
  font-size: 12px;
  color: $color-primary;
  font-weight: 500;

  span {
    white-space: nowrap;
  }
}

.statusIndicator {
  display: flex;
  align-items: center;
  gap: 8px;
  font-size: 12px;
  font-weight: 500;

  span {
    white-space: nowrap;
  }

  &[data-status='error'] {
    color: $color-error;
  }

  &[data-status='info'] {
    color: $color-disabled;
  }
}

.errorIcon {
  font-size: 14px;
  color: $color-error;
}

.retryButtonSmall {
  @include button-base;
  padding: 4px 8px;
  background: $color-error;
  color: $color-background;
  border-radius: 4px;
  font-size: 11px;
  font-weight: 600;

  &:hover {
    background: color.adjust($color-error, $lightness: -8%);
  }
}

.spinner {
  width: 14px;
  height: 14px;
  border: 2px solid rgba($color-primary, 0.2);
  border-top: 2px solid $color-primary;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.lastUpdated {
  font-size: 12px;
  color: $color-disabled;
  font-weight: 400;
}

.pdfControls {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 8px 16px;
  background: rgba($color-primary, 0.02);
  border-bottom: 1px solid rgba($color-primary, 0.1);
  gap: 10px;
  flex-wrap: wrap;
  position: relative;

  @include breakpoint(mobile) {
    padding: 6px 12px;
    gap: 6px;
  }
}

.controlGroup {
  display: flex;
  align-items: center;
  gap: 6px;
}

.controlButton {
  @include button-base;
  gap: 4px;
  padding: 6px 10px;
  background: $color-background;
  border: 1px solid rgba($color-primary, 0.2);
  border-radius: 4px;
  color: $color-text;
  font-size: 13px;
  font-weight: 500;
  min-height: 30px;

  &:hover:not(:disabled) {
    background: rgba($color-primary, 0.05);
    border-color: rgba($color-primary, 0.3);
  }

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  &.active {
    background: $color-primary;
    color: $color-background;
    border-color: $color-primary;

    &:hover {
      background: $color-primary-hover;
    }
  }

  svg {
    width: 14px;
    height: 14px;
  }

  @include breakpoint(mobile) {
    padding: 8px 12px;
    min-height: 36px;
    font-size: 14px;

    svg {
      width: 16px;
      height: 16px;
    }
  }
}

.zoomControls {
  display: flex;
  align-items: center;
  gap: 6px;
}

.sliderToggle {
  padding: 6px;
  min-width: 30px;
  justify-content: center;

  @include breakpoint(mobile) {
    min-width: 36px;
    padding: 8px;
  }
}

.downloadButton {
  background: $color-primary;
  color: $color-background;
  border-color: $color-primary;

  &:hover:not(:disabled) {
    background: $color-primary-hover;
    border-color: $color-primary-hover;
  }

  @include breakpoint(mobile) {
    span {
      display: none; // Hide text on mobile, show only icon
    }
  }
}

.zoomLevel {
  font-size: 13px;
  font-weight: 600;
  color: $color-text;
  min-width: 45px;
  text-align: center;

  @include breakpoint(mobile) {
    font-size: 14px;
    min-width: 50px;
  }
}

.pageInfo {
  font-size: 13px;
  font-weight: 500;
  color: $color-text;
  min-width: 55px;
  text-align: center;

  @include breakpoint(mobile) {
    font-size: 14px;
    min-width: 60px;
  }
}

.zoomSliderContainer {
  position: absolute;
  top: 100%;
  left: 50%;
  transform: translateX(-50%);
  width: 280px;
  padding: 12px;
  background: $color-background;
  border: 1px solid rgba($color-primary, 0.2);
  border-radius: 6px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  z-index: 10;
  display: flex;
  flex-direction: column;
  gap: 6px;

  @include breakpoint(mobile) {
    left: 8px;
    right: 8px;
    width: auto;
    transform: none;
    padding: 16px;
    border-radius: 8px;
  }
}

.zoomSlider {
  @include range-slider;
}

.zoomSliderLabels {
  display: flex;
  justify-content: space-between;
  font-size: 10px;
  color: $color-disabled;

  @include breakpoint(mobile) {
    font-size: 12px;
  }
}

.contentContainer {
  display: flex;
  flex: 1;
  height: 0;
  min-height: 0;
  background: $color-action-item-background;
  position: relative;
}

.previewContent {
  flex: 1;
  overflow: auto;
  position: relative;
  padding: 20px;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  background: $color-action-item-background;
  position: relative;

  @include breakpoint(tablet) {
    padding-bottom: 95px; // 75px bottom nav height + 20px bottom padding
  }

  @include breakpoint(mobile) {
    padding: 10px 10px 66px 10px; // 56px bottom nav height + 10px bottom padding
  }

  // Custom scrollbar styling
  &::-webkit-scrollbar {
    width: 8px;
    height: 8px;
  }

  &::-webkit-scrollbar-track {
    background: rgba(0, 0, 0, 0.05);
    border-radius: 4px;
  }

  &::-webkit-scrollbar-thumb {
    background: rgba(0, 0, 0, 0.2);
    border-radius: 4px;
    transition: background 0.2s ease;

    &:hover {
      background: rgba(0, 0, 0, 0.3);
    }
  }

  &::-webkit-scrollbar-corner {
    background: rgba(0, 0, 0, 0.05);
  }

  // Firefox scrollbar styling
  scrollbar-width: thin;
  scrollbar-color: rgba(0, 0, 0, 0.2) rgba(0, 0, 0, 0.05);
}

.pdfContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 20px;
  user-select: none;
  flex-shrink: 0; // Prevent the container from shrinking
  margin: 0 auto; // Center the container when it fits, allow scrolling when it doesn't

  @include breakpoint(mobile) {
    gap: 10px;
  }

  // PDF Document container
  > div {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 20px;
    flex-shrink: 0; // Prevent shrinking

    @include breakpoint(mobile) {
      gap: 10px;
    }
  }

  // Individual PDF pages
  canvas {
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    border-radius: 4px;
    background: $color-background;
    flex-shrink: 0; // Prevent canvas from shrinking
  }

  // Only apply width constraints when fit-to-width is active
  &.fitToWidth {
    width: 100%;

    canvas {
      max-width: 100%;
      width: auto !important;
      height: auto !important;
    }
  }
}

.emptyState {
  @include empty-state;
  padding: 60px 20px;
  text-align: center;
  width: 100%;
  align-self: center;
  flex-direction: column;

  h3 {
    font-size: 20px;
    font-weight: 600;
    color: $color-text;
    margin: 0 0 12px 0;
  }

  p {
    @include empty-message;
    font-size: 16px;
    max-width: 400px;
  }
}
